blogdown::new_site(theme = 'gcushen/hugo-academic')
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::hugo_build()
setwd("~/Dropbox/Website/hugo_website/web/public")
blogdown::hugo_build()
blogdown::hugo_build()
setwd("~/Desktop")
d <- read.csv("test.csv", stringsAsFactors = F)
unique(d$focal)
unique(d$other)
unique(d$receiver)
d2 <- read.csv("test2.csv", stringsAsFactors = F)
unique(d2$monkey)
unqiue(d2$groupid)
unique(d2$groupid)
nchar(d2$monkey)
d2$monkey2 <- unlist( sapply( 1:length(d2$monkey), function(i)
ifelse( nchar(d2$monkey[i]) == 2, paste0(substr(d2$monkey[i],1), d2$monkey[i]), d2$monkey[i]) ) )
d2$monkey2 <- unlist( sapply( 1:length(d2$monkey), function(i)
ifelse( nchar(d2$monkey[i]) == 2, paste0( substr(d2$monkey[i],1,1), d2$monkey[i]), d2$monkey[i]) ) )
View(d2)
setwd("~/Desktop")
# census day list -- days we want to keep
c <- read.csv("sl_census_group_days.csv", stringsAsFactors = F)
# focal follow table
d <- read.csv("sl_exp_ff_final.csv", stringsAsFactors = F)
View(c)
str(c)
# make combination columns for checking
c$combo <- paste0(c$groupid, c$day)
d$combo <- paste0(d$groupid, d$day)
# For each line in focal follow table, check if day/group combination is in census day list table
d2 <- d[ d$combo %in% c$combo,]
View(d2)
dim(d)
dim(d2)
d3 <- d[ !d$combo %in% c$combo,]
dim(d3)
test <- unique(d3$combo)
test
test[1] %in% c$combo
test[800] %in% c$combo
test[555] %in% c$combo
test %in% c$combo
sum( test %in% c$combo)
sum( d2$combo %in% d3$combo)
sum( d2$combo %in% c$combo)
dim(d2)[2]
# get rid of combo column and save new table
d2 <- d2[ ,- dim(d2)[2] ]
dim(d)
View(d)
write.csv(d2, "sl_exp_ff_days_adjusted.csv", row.names = F)
# make a new combination column:
d2$combo <- paste0(d2$groupid, d2$year, d2$focal)
da <- data.frame( groupid = character(),
year = numeric(),
focal = numeric(),
sex = character(),
num_follows = numeric())
# make a new combination column:
d2$combo <- paste0(d2$groupid, d2$year, d2$focal)
da <- data.frame( groupid = character(),
year = numeric(),
focal = numeric(),
num_follows = numeric() )
combo <- unique(d2$combo)
for(x in 1:length(combo) ){
da$groupid[x] <- substr(combo[x],1,2)
da$year[x] <- substr(combo[x],3,6)
da$focal[x] <- substr(combo,7,8) # adjust if 3-character IDs
da$sex[x] <- unique( d2$sex[ which(d2$combo == combo[x]) ] )
da$num_follows[x] <- sum( d2$num_follows[ which(d2$combo == combo[x]) ] )
}
combo
length(combo)
da <- data.frame( groupid = character(),
year = numeric(),
focal = numeric(),
sex = character(),
num_follows = numeric() )
for(x in 1:length(combo) ){
da$groupid[x] <- substr(combo[x],1,2)
da$year[x] <- substr(combo[x],3,6)
da$focal[x] <- substr(combo,7,8) # adjust if 3-character IDs
da$sex[x] <- unique( d2$sex[ which(d2$combo == combo[x]) ] )
da$num_follows[x] <- sum( d2$num_follows[ which(d2$combo == combo[x]) ] )
}
str(d2)
da <- data.frame( groupid = character(),
year = numeric(),
focal = numeric(),
#sex = character(),
num_follows = numeric() )
combo <- unique(d2$combo)
for(x in 1:length(combo) ){
da$groupid[x] <- substr(combo[x],1,2)
da$year[x] <- substr(combo[x],3,6)
da$focal[x] <- substr(combo,7,8) # adjust if 3-character IDs
#da$sex[x] <- unique( d2$sex[ which(d2$combo == combo[x]) ] )
da$num_follows[x] <- sum( d2$num_follows[ which(d2$combo == combo[x]) ] )
}
View(da)
x
substr(combo[x],1,2)
substr(combo[x],3,6)
as.numeric(substr(combo[x],3,6))
substr(combo,7,8)
substr(combo[x],7,8)
sum( d2$num_follows[ which(d2$combo == combo[x]) ] )
da <- data.frame( groupid = character(),
year = numeric(),
focal = numeric(),
#sex = character(),
num_follows = numeric() )
combo <- unique(d2$combo)
for(x in 1:length(combo) ){
da$groupid[x] <- substr(combo[x],1,2)
da$year[x] <- as.numeric(substr(combo[x],3,6))
da$focal[x] <- substr(combo[x],7,8) # adjust if 3-character IDs
#da$sex[x] <- unique( d2$sex[ which(d2$combo == combo[x]) ] )
da$num_follows[x] <- sum( d2$num_follows[ which(d2$combo == combo[x]) ] )
}
da <- data.frame( groupid = character(),
year = numeric(),
focal = character(),
#sex = character(),
num_follows = numeric() )
combo <- unique(d2$combo)
for(x in 1:length(combo) ){
da$groupid[x] <- substr(combo[x],1,2)
da$year[x] <- as.numeric(substr(combo[x],3,6))
da$focal[x] <- substr(combo[x],7,8) # adjust if 3-character IDs
#da$sex[x] <- unique( d2$sex[ which(d2$combo == combo[x]) ] )
da$num_follows[x] <- sum( d2$num_follows[ which(d2$combo == combo[x]) ] )
}
da$groupid[x] <- substr(combo[x],1,2)
da <- data.frame( groupid = rep(NA, length(combo)),
year = rep(NA, length(combo)),
focal = rep(NA, length(combo)),
#sex = character(),
num_follows = rep(NA, length(combo)) )
for(x in 1:length(combo) ){
da$groupid[x] <- substr(combo[x],1,2)
da$year[x] <- as.numeric(substr(combo[x],3,6))
da$focal[x] <- substr(combo[x],7,8) # adjust if 3-character IDs
#da$sex[x] <- unique( d2$sex[ which(d2$combo == combo[x]) ] )
da$num_follows[x] <- sum( d2$num_follows[ which(d2$combo == combo[x]) ] )
}
View(da)
str(da)
da <- data.frame( groupid = rep(NA, length(combo)),
year = rep(NA, length(combo)),
focal = rep(NA, length(combo)),
sex = rep(NA, length(combo)),
num_follows = rep(NA, length(combo)) )
for(x in 1:length(combo) ){
da$groupid[x] <- substr(combo[x],1,2)
da$year[x] <- as.integer(substr(combo[x],3,6))
da$focal[x] <- substr(combo[x],7,8) # adjust if 3-character IDs
da$sex[x] <- unique( d2$sex[ which(d2$combo == combo[x]) ] )
da$num_follows[x] <- sum( d2$num_follows[ which(d2$combo == combo[x]) ] )
}
View(d2[d2$focal=="AL" & d2$year==2003,])
View(d2[d2$focal=="BE" & d2$year==2003,])
# save the table
write.csv(d2, "sl_exp_ff_annual.csv", row.names = F)
# save the table
write.csv(da, "sl_exp_ff_annual.csv", row.names = F)
setwd("~/Dropbox/1_Projects/sociality and longevity/sl_dataset/tables_db")
list.file()
list.files()
sl1 <- read.csv("sl_census_group_days.csv", stringsAsFactors = F)
sl2 <- read.csv("sl_census_group_years.csv", stringsAsFactors = F)
sl3 <- read.csv("sl_census_monkey_days.csv", stringsAsFactors = F)
sl4 <- read.csv("sl_census_monkey_years.csv", stringsAsFactors = F)
sl5 <- read.csv("sl_census_monkey_years_adults.csv", stringsAsFactors = F)
dim(sl2)
sl3$day %n% sl1$days
sum( !sl3$day %in% sl1$days)
sum( ! sl3$day %in% sl1$day )
setwd("~/Desktop")
d <- read.csv("sl_group_scans.csv", stringsAsFactors = F)
unique(d$activity)
setwd("~/Dropbox/1_Projects/sociality and longevity/sl_dataset/tables_db")
# census day list -- days we want to keep
c <- read.csv("sl_census_group_days.csv", stringsAsFactors = F)
# focal follow table
d <- read.csv("sl_exp_ff_4.csv", stringsAsFactors = F)
# make combination columns for checking
c$combo <- paste0(c$groupid, c$day)
d$combo <- paste0(d$groupid, d$day)
# For each line in focal follow table, check if day/group combination is in census day list table
d2 <- d[ d$combo %in% c$combo,]
d3 <- d[ !d$combo %in% c$combo,]
# get rid of combo column and save new table
d2 <- d2[ ,- dim(d2)[2] ]
View(d2)
db <- read.csv("sl_exp_ff_final.csv", stringsAsFactors = F)
View(db)
db$combo <- paste0(db$groupid, db$day)
db$combo %n% d2$combo
sum(!db$combo %in% d2$combo)
d2$combo <- paste0(d2$groupid, d2$day)
sum(!db$combo %in% d2$combo)
sum(!d2$combo %in% db$combo)
# get rid of combo column and save new table
d2 <- d2[ ,- dim(d2)[2] ]
# make a new combination column:
d2$combo <- paste0(d2$groupid, d2$year, d2$focal)
combo <- unique(d2$combo)
da <- data.frame( groupid = rep(NA, length(combo)),
year = rep(NA, length(combo)),
focal = rep(NA, length(combo)),
sex = rep(NA, length(combo)),
num_follows = rep(NA, length(combo)) )
for(x in 1:length(combo) ){
da$groupid[x] <- substr(combo[x],1,2)
da$year[x] <- as.integer(substr(combo[x],3,6))
da$focal[x] <- substr(combo[x],7,8) # adjust if 3-character IDs
da$sex[x] <- unique( d2$sex[ which(d2$combo == combo[x]) ] )
da$num_follows[x] <- sum( d2$num_follows[ which(d2$combo == combo[x]) ] )
}
dba <- read.csv("sl_exp_ff_annual.csv", stringsAsFactors = F)
dim(da)
dim(dba)
dba$combo <- paste0( dba$groupid, dba$year, dba$focal)
da$combo <- paste0( da$groupid, da$year, da$focal)
sum(!dba$combo %in% da$combo)
sum(!da$combo %in% dba$combo)
which(!dba$combo %in% da$combo)
dba$combo[24]
which(!da$combo %in% dba$combo)
da$combo[1268]
View(dba)
build_site()
serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::hugo_build()
blogdown::hugo_build()
blogdown::build_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::update_meta_addin()
blogdown::config_netlify()
blogdown:::serve_site()
